name: Backend CI/CD

on:
  push:
    branches: [ master, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ master, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    name: Backend Health Check & Build
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: backend/yarn.lock

    - name: Install dependencies
      working-directory: ./backend
      run: yarn install --frozen-lockfile

    - name: Run TypeScript type check
      working-directory: ./backend
      run: yarn tsc --noEmit

    - name: Build application
      working-directory: ./backend
      run: yarn build
      env:
        NODE_ENV: production

    - name: Start server in background
      working-directory: ./backend
      run: |
        yarn start &
        sleep 5
      env:
        NODE_ENV: test
        PORT: 3001
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: test_db
        DB_USER: test_user
        DB_PASSWORD: test_password
        JWT_SECRET: test-jwt-secret-key

    - name: Health check test
      run: |
        echo "Testing health endpoint..."
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/health)
        if [ $response -eq 200 ]; then
          echo "✅ Health check passed (HTTP 200)"
          curl -s http://localhost:3001/health | jq '.'
        else
          echo "❌ Health check failed (HTTP $response)"
          exit 1
        fi

    - name: Cleanup
      if: always()
      run: |
        pkill -f "node.*dist/index.js" || true
        sleep 2